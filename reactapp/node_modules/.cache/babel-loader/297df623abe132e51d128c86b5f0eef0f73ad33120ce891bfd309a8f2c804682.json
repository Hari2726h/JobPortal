{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hari2\\\\Downloads\\\\JobPortal\\\\e38d0216-594d-49bd-a645-5961dec22ff5-f865a965-7f87-494f-96d5-14a7b6d5b8be\\\\reactapp\\\\src\\\\company\\\\Notifications.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BellFill } from 'react-bootstrap-icons';\nimport * as api from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notifications = ({\n  companyId\n}) => {\n  _s();\n  const [newAppsCount, setNewAppsCount] = useState(0);\n  useEffect(() => {\n    // If companyId is not available, do nothing\n    if (!companyId) return;\n    const fetchApplications = async () => {\n      try {\n        const applications = await api.getApplicationsByCompany(companyId);\n        // Count only new applications\n        const newApps = applications.filter(app => app.status === 'New');\n        setNewAppsCount(newApps.length);\n      } catch (err) {\n        console.error('Error fetching applications:', err);\n      }\n    };\n\n    // Initial fetch\n    fetchApplications();\n\n    // Poll every 30 seconds\n    const interval = setInterval(fetchApplications, 30000);\n\n    // Cleanup on unmount\n    return () => clearInterval(interval);\n  }, [companyId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      cursor: 'pointer'\n    },\n    children: [/*#__PURE__*/_jsxDEV(BellFill, {\n      size: 24\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), newAppsCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        background: 'red',\n        borderRadius: '50%',\n        padding: '2px 6px',\n        fontSize: '0.7rem',\n        color: 'white'\n      },\n      children: newAppsCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(Notifications, \"Vs0bnsuwXP5G2cOC5kHfr8zQ9do=\");\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useEffect","useState","BellFill","api","jsxDEV","_jsxDEV","Notifications","companyId","_s","newAppsCount","setNewAppsCount","fetchApplications","applications","getApplicationsByCompany","newApps","filter","app","status","length","err","console","error","interval","setInterval","clearInterval","style","position","cursor","children","size","fileName","_jsxFileName","lineNumber","columnNumber","top","right","background","borderRadius","padding","fontSize","color","_c","$RefreshReg$"],"sources":["C:/Users/hari2/Downloads/JobPortal/e38d0216-594d-49bd-a645-5961dec22ff5-f865a965-7f87-494f-96d5-14a7b6d5b8be/reactapp/src/company/Notifications.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { BellFill } from 'react-bootstrap-icons';\r\nimport * as api from '../utils/api';\r\n\r\nconst Notifications = ({ companyId }) => {\r\n    const [newAppsCount, setNewAppsCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        // If companyId is not available, do nothing\r\n        if (!companyId) return;\r\n\r\n        const fetchApplications = async () => {\r\n            try {\r\n                const applications = await api.getApplicationsByCompany(companyId);\r\n                // Count only new applications\r\n                const newApps = applications.filter(app => app.status === 'New');\r\n                setNewAppsCount(newApps.length);\r\n            } catch (err) {\r\n                console.error('Error fetching applications:', err);\r\n            }\r\n        };\r\n\r\n        // Initial fetch\r\n        fetchApplications();\r\n\r\n        // Poll every 30 seconds\r\n        const interval = setInterval(fetchApplications, 30000);\r\n\r\n        // Cleanup on unmount\r\n        return () => clearInterval(interval);\r\n    }, [companyId]);\r\n\r\n    return (\r\n        <div style={{ position: 'relative', cursor: 'pointer' }}>\r\n            <BellFill size={24} />\r\n            {newAppsCount > 0 && (\r\n                <span\r\n                    style={{\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        right: 0,\r\n                        background: 'red',\r\n                        borderRadius: '50%',\r\n                        padding: '2px 6px',\r\n                        fontSize: '0.7rem',\r\n                        color: 'white',\r\n                    }}\r\n                >\r\n                    {newAppsCount}\r\n                </span>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notifications;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,OAAO,KAAKC,GAAG,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAEnDD,SAAS,CAAC,MAAM;IACZ;IACA,IAAI,CAACO,SAAS,EAAE;IAEhB,MAAMI,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACA,MAAMC,YAAY,GAAG,MAAMT,GAAG,CAACU,wBAAwB,CAACN,SAAS,CAAC;QAClE;QACA,MAAMO,OAAO,GAAGF,YAAY,CAACG,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,MAAM,KAAK,KAAK,CAAC;QAChEP,eAAe,CAACI,OAAO,CAACI,MAAM,CAAC;MACnC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEF,GAAG,CAAC;MACtD;IACJ,CAAC;;IAED;IACAR,iBAAiB,CAAC,CAAC;;IAEnB;IACA,MAAMW,QAAQ,GAAGC,WAAW,CAACZ,iBAAiB,EAAE,KAAK,CAAC;;IAEtD;IACA,OAAO,MAAMa,aAAa,CAACF,QAAQ,CAAC;EACxC,CAAC,EAAE,CAACf,SAAS,CAAC,CAAC;EAEf,oBACIF,OAAA;IAAKoB,KAAK,EAAE;MAAEC,QAAQ,EAAE,UAAU;MAAEC,MAAM,EAAE;IAAU,CAAE;IAAAC,QAAA,gBACpDvB,OAAA,CAACH,QAAQ;MAAC2B,IAAI,EAAE;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACrBxB,YAAY,GAAG,CAAC,iBACbJ,OAAA;MACIoB,KAAK,EAAE;QACHC,QAAQ,EAAE,UAAU;QACpBQ,GAAG,EAAE,CAAC;QACNC,KAAK,EAAE,CAAC;QACRC,UAAU,EAAE,KAAK;QACjBC,YAAY,EAAE,KAAK;QACnBC,OAAO,EAAE,SAAS;QAClBC,QAAQ,EAAE,QAAQ;QAClBC,KAAK,EAAE;MACX,CAAE;MAAAZ,QAAA,EAEDnB;IAAY;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACzB,EAAA,CAjDIF,aAAa;AAAAmC,EAAA,GAAbnC,aAAa;AAmDnB,eAAeA,aAAa;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}